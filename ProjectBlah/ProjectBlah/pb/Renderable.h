#pragma once

#include <glm\glm.hpp>
#include <pb\GameObject.h>
#include <vector>

class ProjectBlah;

namespace pb
{
	class Material;
	class VertexObjectData;

	class Renderable : virtual public GameObject
	{

		friend class Material;

	protected:

		/** @brief Override to set data for mesh.
		* A cube will be generated by default.
		**/
		virtual void SetVertexObjectData();


		/** @brief Sets object to render with desired material.**/
		void SetMaterial(Material* material);



	public:


		Renderable(const char* name = "renderable");

		~Renderable();

		void Draw();

	protected:

		Material* material_ = nullptr;



		glm::mat4 model_view_projection_;
		unsigned int model_view_projection_id_;


		unsigned int vertex_array_object_;

		std::vector<unsigned int> index_data_;
		unsigned int index_buffer_id_;

		std::vector<glm::vec4> position_data_;
		unsigned int position_buffer_id_;



	

		/// @todo Put the rest of the possible vertex info here



	};





}